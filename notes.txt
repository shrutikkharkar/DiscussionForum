Algo to use:
Content matching using Levenshtein Distance algorithm
Question-answer pair generation and ranking using NAIVE BAYES considering like count and comment polarity.
Features extracted from answers has higher power compared to the features extracted from questions.
Results shows that KNN has better output then Naive bayes also it takes lesser time than Naive bayes.

Summation: Content matching Levenshtein Distance algorithm, Question-answer pair generation and ranking using KNN considering like count and comment polarity AND using answer features.

Summation NEW: Content matching Levenshtein Distance algorithm, 
                ranking using KNN considering like count AND using answer features.

https://reactjsexample.com/a-modular-table-based-on-a-css-grid-layout-optimized-for-customization/

BUGS:
1. history.push doesnot update data when in the same route
2. Blocked answer shows wrong blocked by
3. Improve latency of like and dislike

Functions to add:
-Avoid brute force

Priority-
  -searchbar for phone
  -likedby
  -Add comments logo in side panel
  -remove socket
  

-search algo
  
-priviledges - 1(normal user), 2(College student), 3(Faculty/admin)
-image bar
-google signup

Sidenav for phone
subpart doesnot reload route
tagPage
Notification
tags on phone out of screen
ckeditor
Hashtags in searchbar 
update answers, etc
Tag suggestions
Comment on answer
toggle like dislike and save
report
loading
notification
Delete answers when question is deleted 
Admin panel - User list(Take down questions, Take down answers, Take down comments, Block activity, Block Everything), 
               All questions(Take down and Bring back TOGGLE), 
               All answers(Take down and Bring back TOGGLE),
               (When answer is blocked, notify the user)
               All comments(Take down and Bring back TOGGLE), 
               Reports  
Answered(Show if answer was removed)
USE REACT TOASTIFY FOR ALERT
If answer should be visible to admin even if user is blocked


LOGIC FOR NOTIFICATIONS:
when liked store likedById, answerId, answerById, seen(true/false)
Notification for liked, commented, answered, removed ans and question,
special notification for admins

app.use(
  compression(
    (level = 6),
    (filter = (req, res) => {
      if (req.headers["no-x-compression"]) {
        return false;
      }
      return compression.filter(req, res);
    })
  )
);

https://github.com/safak/youtube/tree/mern-social-app




$ git add .

$ git commit -m "Updated style on update date"

$ git push origin master




reply to an answer

Redux (useSelector)

passport passport-jwt validator

Collections:
1. answers
2. users
3. questions


cors
dotenv
mongoose

"Rest client" vs code extension

User details attributes
1. Name
2. Class
3. Department
4. Password
3. Special User(Staff)

Pages:
1. Login / Signup page(/userLogin)
2. Primary page(all questions)(/index)
3. Search result page(/searchQuery)
4. Add question page(/addQuestion)
 
models for questions
question
answersCount
viewsCount
votesCount
updatedondate
answeredById

security:
google firebase authentication system
amazon simple mail 
free ssl(opensource)

DB:
Mlab
Redis labs

virtual private server
Digital ocean
vultur

Dokku(similar to heroku)

For frontend hosting:
netlify

For user uploaded images:
imgix.com($3/1000 images additional money for network)
cloudinary.com(free tier)